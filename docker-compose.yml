services:

 kafka:
  image: apache/kafka:latest
  container_name: kafka
  ports:
    - "9092:9092"
  volumes:
   - ./data:/kafka/kraft-combined-logs
  environment:
    KAFKA_NODE_ID: 1
    KAFKA_PROCESS_ROLES: controller,broker
    KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
    KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
    KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
    KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
    KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
    KAFKA_LOG_DIRS: /tmp/kafka-logs
    command: >
     bash -c "if [ ! -f /kafka/kraft-combined-logs/meta.properties ]; then
     /opt/kafka/bin/kafka-storage.sh format -t Mk3OEYBSD34fcwNTJENDM2Qk -c /opt/kafka/config/kraft/server.properties --ignore-formatted --standalone;
     fi &&
     /opt/kafka/bin/kafka-server-start.sh /opt/kafka/config/kraft/server.properties"
  networks:
      - kafka-net

 
 kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: kafka-local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    depends_on:
      - kafka
    networks:
      - kafka-net

 producer:
    restart: on-failure
    build:
      context: ./producer
    stdin_open: true    
    tty: true
    container_name: producer
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - kafka
    networks:
      - kafka-net

 consumer:
    restart: on-failure
    container_name: consumer
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    build:
      context: ./consumer
    depends_on:
      - kafka
    networks:
      - kafka-net

volumes:
  data:

networks:
  kafka-net:

